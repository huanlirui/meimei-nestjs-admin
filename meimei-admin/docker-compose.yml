version: "3.8"

services:
  # 服务名称，任意，不重复即可
  redis:
    # 指定服务名称，命令：--name redis
    # 如果不指定，则将默认用docker-compose.yml所在文件夹名_服务名称_n命名
    container_name: redis
    # 指定镜像：命令 redis:latest
    image: redis:latest
    # 指定端口：命令 -p 主机端口:容器端口
    ports:
      - "6379:6379"
    # 加入指定网络，容器间必须要处于同一个网络才能通过容器名称进行调用
    networks:
      - my_network
  mysql:
    container_name: mysql
    image: mysql:5.7
    ports:
      - "3307:3306"
    environment:
      # 等同于 -e MYSQL_ROOT_PASSWORD指定root的登录密码
      MYSQL_ROOT_PASSWORD: '123456'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
      # 这里这个指令compose启动成功后会自动创建名为docker的数据库
      MYSQL_DATABASE: 'mei-mei'
      # 此处就是相当于 mysql create user，创建了数据库的登录用户
      MYSQL_USER: 'mei-mei'
      MYSQL_PASSWORD: '123456'
    networks:
      # 注意加入同一个网络
      - my_network
    # 解决外部无法访问
    command: --default-authentication-plugin=mysql_native_password

# 创建网络      
networks:
  # 默认将会创建为 docker-compose.yml所在 文件夹名_my_network 网络名称
  my_network:
